# K8 works with API versions to declare the resources
# We have to delclare the apiVersion and the kind of service/component
# services: deployment, service, pods, replicasets, crobjob, autoscalinggroup, horizontal pod scaling group (HPA)
# Kubect get service_name - deployment - pod - rs
# kubectl get deploy nginx_deploy (nginx_svc)
# kubectl get pods 
# kubect describe pod pod_name
# 


# YML is case sensitive - intendation of YML is important
# use spaces not a tab
apiVersion: apps/v1 # which api to use for deployment
kind: Deployment # what kind of service/object you want to create
# what would you like to call it - name the service/object
metadata:
  name: nginx-deployment # naming the deployment
spec:
  selector:
    matchLabels:
      app: nginx # look for this label to match with k8 service
    # Let's create a replica set of this with  instances/pods
  replicas: 4             
    # template to use it's label for K8 service to launch in the browser
  template:
    metadata:
      labels:
        app: nginx # This label connects to 
                   #the service or any other k8 components
  # Let's define the container spec
    spec:
      containers:
      - name: nginx 
        image: ahskhan/eng89automatednginx:latest # use the image that you built
        ports:
        - containerPort: 80

# create a kubernetes nginx-service.yml to create a k8 service